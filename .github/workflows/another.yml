name: Another Workflow
on:
  push:
    branches:
      - master  # Change this to the branch you want to trigger the workflow on

env:
  ROLLBACK_ATTEMPTED: false  # Set the default value of the environment variable

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"
      - name: Print ROLLBACK_ATTEMPTED Before
        run: echo "ROLLBACK_ATTEMPTED Before:${{ env.ROLLBACK_ATTEMPTED }}"

  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: echo "Computer name"

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: echo "Copying from S3"

  check-condition:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]  # Ensure it waits for all previous jobs
    if: always()  # Ensure this job runs regardless of the results of previous jobs
    steps:
      - name: Check Condition
        run: |
          echo "Checking conditions of previous jobs."
          echo "Job results:"
          echo "set-environment result: ${{ needs.set-environment.result }}"
          echo "prerequisite result: ${{ needs.prerequisite.result }}"
          echo "get-computer-name result: ${{ needs.get-computer-name.result }}"
          echo "copy-from-s3 result: ${{ needs.copy-from-s3.result }}"

          if [[ "${{ needs.set-environment.result }}" == "failure" || "${{ needs.prerequisite.result }}" == "failure" || "${{ needs.get-computer-name.result }}" == "failure" || "${{ needs.copy-from-s3.result }}" == "failure" ]]; then
            echo "Condition failed in previous jobs, updating ROLLBACK_ATTEMPTED to true."
            echo "ROLLBACK_ATTEMPTED=true" >> $GITHUB_ENV  # Update the environment variable to true
          else
            echo "All jobs succeeded. No rollback needed."
          fi

  print-env:
    runs-on: ubuntu-latest
    needs: check-condition
    steps:
      - name: Print ROLLBACK_ATTEMPTED After
        run: echo "ROLLBACK_ATTEMPTED After:${{ env.ROLLBACK_ATTEMPTED }}"

  deployment:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, check-condition]
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }} 
      ENVIRONMENT: 'production'
