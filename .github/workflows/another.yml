name: Another Workflow
on:
  push:
    branches:
      - master
env:
  ROLLBACK_ATTEMPTED: false  

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"
      - name: Print ROLLBACK_ATTEMPTED Before
        run: echo "ROLLBACK_ATTEMPTED Before:${{ env.ROLLBACK_ATTEMPTED }}"

  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: echo "Computer name"

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: echo "Copying from S3"

  check-condition:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]
    if: ${{ always() && contains(needs.*.result, 'failure') }}
    outputs:
      rollback_attempted: ${{ steps.set_rollback.outputs.ROLLBACK_ATTEMPTED }}
    steps:
      - name: Check Condition
        id: set_rollback
        run: |
          echo "Checking conditions of previous jobs."
          
          # Assign trimmed job result values to shell variables
          SET_ENVIRONMENT_RESULT="$(echo "${{ needs.set-environment.result }}" | xargs)"
          PREREQUISITE_RESULT="$(echo "${{ needs.prerequisite.result }}" | xargs)"
          GET_COMPUTER_NAME_RESULT="$(echo "${{ needs.get-computer-name.result }}" | xargs)"
          COPY_FROM_S3_RESULT="$(echo "${{ needs.copy-from-s3.result }}" | xargs)"
          
          # Print values for debugging
          echo "SET_ENVIRONMENT_RESULT: '$SET_ENVIRONMENT_RESULT'"
          echo "PREREQUISITE_RESULT: '$PREREQUISITE_RESULT'"
          echo "GET_COMPUTER_NAME_RESULT: '$GET_COMPUTER_NAME_RESULT'"
          echo "COPY_FROM_S3_RESULT: '$COPY_FROM_S3_RESULT'"
          
          # Only set ROLLBACK_ATTEMPTED to false if *all* are success
          if [[ "$SET_ENVIRONMENT_RESULT" == "success" && "$PREREQUISITE_RESULT" == "success" && "$GET_COMPUTER_NAME_RESULT" == "success" && "$COPY_FROM_S3_RESULT" == "success" ]]; then
            echo "All conditions matched: Setting ROLLBACK_ATTEMPTED to false"
            echo "ROLLBACK_ATTEMPTED=false" >> $GITHUB_ENV
            echo "ROLLBACK_ATTEMPTED=false" >> $GITHUB_OUTPUT
          else
            echo "Condition not fully matched: Setting ROLLBACK_ATTEMPTED to true"
            echo "ROLLBACK_ATTEMPTED=true" >> $GITHUB_ENV
            echo "ROLLBACK_ATTEMPTED=true" >> $GITHUB_OUTPUT
          fi
  print-env:
    runs-on: ubuntu-latest
    needs: check-condition
    steps:
      - name: Print ROLLBACK_ATTEMPTED After
        run: echo "ROLLBACK_ATTEMPTED After:${{ needs.check-condition.outputs.rollback_attempted }}"

  deployment:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, check-condition]
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }} 
      ENVIRONMENT: 'production'
