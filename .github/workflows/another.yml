name: Another Workflow
on:
  push:
    branches:
      - master  # Change this to the branch you want to trigger the workflow on

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"

  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: echo "Computer name"  # You should output the actual computer name here

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: echo "Copying from S3"  # Replace with your actual copy logic

  deployment:
    if: (github.event_name == 'push' || github.event_name == 'workflow_dispatch')
    needs:
      - set-environment
      - prerequisite
      - get-computer-name
      - copy-from-s3
    runs-on: ubuntu-latest  # Specify your runner
    steps:
      - name: Deploy Application
        run: |
          echo "Deploying application..."
          # Add your deployment logic here
          echo "Deployment complete."

  rollback-to-previous-version:
    needs:
      - set-environment
      - prerequisite
      - get-computer-name
      - copy-from-s3
      - deployment
    if: ${{ always() }}  # Ensure this job runs regardless of previous failures
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      environment: ${{ needs.set-environment.outputs.environment }}
      version: "${{ needs.copy-from-s3.outputs.FOLDER_NAME }}"
      git_dir_path: ${{ needs.prerequisite.outputs.GIT_DIR_PATH }}
      computer_web_base64: ${{ needs.get-computer-name.outputs.COMPUTER_WEB_BASE64 }}

  check-rollback-status:
    needs:
      - rollback-to-previous-version
    runs-on: ubuntu-latest
    steps:
      - name: Check Rollback Status
        run: echo "ROLLBACK_ATTEMPTED=true" >> $GITHUB_ENV  # Set an environment variable for next jobs

  slack-notify-deploy-success:
    if:
      (github.event_name == 'push' || github.event_name == 'workflow_dispatch') && 
      (needs.set-environment.result == 'success' &&
      needs.prerequisite.result == 'success' &&
      needs.get-computer-name.result == 'success' &&
      needs.copy-from-s3.result == 'success' &&
      (needs.deployment.result == 'success' || 
       env.ROLLBACK_ATTEMPTED == 'true'))  # Check for rollback attempt
    runs-on: ubuntu-latest
    environment: ${{ needs.set-environment.outputs.environment }}
    needs:
      - set-environment
      - prerequisite
      - get-computer-name
      - copy-from-s3
      - deployment
      - check-rollback-status
    steps:
      - name: Print Deployment Status
        run: echo "Deployment successful in environment"
