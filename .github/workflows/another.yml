name: Another Workflow
on:
  push:
    branches:
      - master
env:
  ROLLBACK_ATTEMPTED: false  

jobs:
  set-environment:
    runs-on: ubuntu-latest
    steps:
      - name: Set environment
        run: echo "Setting environment"
      - name: Print ROLLBACK_ATTEMPTED Before
        run: echo "ROLLBACK_ATTEMPTED Before:${{ env.ROLLBACK_ATTEMPTED }}"

  prerequisite:
    runs-on: ubuntu-latest
    needs: set-environment
    steps:
      - name: Prerequisite step
        run: echo "Running prerequisite"

  get-computer-name:
    runs-on: ubuntu-latest
    needs: prerequisite
    steps:
      - name: Get computer name
        run: echo "Computer name"

  copy-from-s3:
    runs-on: windows-latest
    needs: get-computer-name
    steps:
      - name: Copy from S3
        run: echo "Copying from S3"

  check-condition:
    runs-on: ubuntu-latest
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3]
    if: always()
    outputs:
      rollback_attempted: ${{ steps.set_rollback.outputs.ROLLBACK_ATTEMPTED }}
    steps:
      - name: Check Condition
        id: set_rollback
        run: |
          echo "Checking conditions of previous jobs."
          
          # Assign each job result to a shell variable
          SET_ENVIRONMENT_RESULT="${{ needs.set-environment.result }}"
          PREREQUISITE_RESULT="${{ needs.prerequisite.result }}"
          GET_COMPUTER_NAME_RESULT="${{ needs.get-computer-name.result }}"
          COPY_FROM_S3_RESULT="${{ needs.copy-from-s3.result }}"
          
          # Check conditions using the shell variables
          if [[ "$SET_ENVIRONMENT_RESULT" == "success" || "$PREREQUISITE_RESULT" == "success" || "$GET_COMPUTER_NAME_RESULT" == "failure" || "$COPY_FROM_S3_RESULT" == "success" ]]; then
            echo "::set-output name=ROLLBACK_ATTEMPTED::false"
          else
            echo "::set-output name=ROLLBACK_ATTEMPTED::true"
          fi



  print-env:
    runs-on: ubuntu-latest
    needs: check-condition
    steps:
      - name: Print ROLLBACK_ATTEMPTED After
        run: echo "ROLLBACK_ATTEMPTED After:${{ needs.check-condition.outputs.rollback_attempted }}"

  deployment:
    if: ${{ github.event_name == 'push' || github.event_name == 'workflow_dispatch' }}
    needs: [set-environment, prerequisite, get-computer-name, copy-from-s3, check-condition]
    uses: shubhamchav/20.Reusing_Workflow/.github/workflows/base.yml@master
    with:
      VERSION: ${{ github.run_number }} 
      ENVIRONMENT: 'production'
